################################################################################################################################################
Pre-Installation
################################################################################################################################################

#SSD Tips before installation
https://wiki.debian.org/SSDOptimization#Basics


################################################################################################################################################
Post-Installation
################################################################################################################################################

#To set resolution. Change with required resolution. Requires xorg-xrandr
xrandr -s 1920x1080


#Brightness control. Requires 'xorg-xbacklight' package.
xbacklight -set <percentage of max brightness> //e.g. 50 means 50 % of maximum brightness

xbacklight -inc 10 //Increases brightness by 10%

xbacklight -dec 10 //Decreases brightness by 10%


#Night Light. Requires 'redshift' package.
redshift -O 4500K //4500K for night, 6500K for day.

#Touchpad Settings. Requires libinput and xorg-xinput.
#NOTE: Configuration resets after reboot.
1.	sudo libinput list-devices
2.	sudo xinput list
3.	sudo xinput list-props device //here 'device' is the device number corresponding to the device name in the ssecond command.
4.	sudo xinput set-prop device option setting	//option corresponds to the option number in the list from command 2, property can be set using the current values in the list obtained from command 2.
 Example: sudo xinput set-prop 14 307 1

#USB/Hard-Drives

#By default, drives will be mounted at /run/media/<username>/<driveName>
# To mount
udisksctl mount -b <device path> //where devicepath is found by typing 'lsblk' in a separate terminal

#To Unmount
udisksctl unmount -b <device path>

################################################################################################################################################
Networks/Wireless
################################################################################################################################################
#Network-Manager wifi Connection. Requires 'networkmanager' package.
###Connect to Wifi
nmcli device wifi connect <SSID here> password <password here>
###Turn-off WiFi
nmcli radio wifi off
###Show state of device
nmcli device
###Disconnect an interface
nmcli disconnect ifname <interface name>
###Reconnect interface marked as disconnected
nmcli connection up uuid <UUID>

#Manage Wifi using wpa_supplicant. Requires 'wpa_supplicant' package.
1.	systemctl enable wpa_supplicant.service
2.	systemctl start wpa_supplicant.service
3.	ip link		#to view the name of the wireless interface. If it's DOWN, then set to UP.
4.	echo "ctrl_interface=/run/wpa_supplicant\nupdate_config=1" > /etc/wpa_supplicant/wpa_supplicant.conf
5.	wpa_supplicant -B -i <interface_name> -c /etc/wpa_supplicant/wpa_supplicant.conf
6.	wpa_cli -i <interface_name>	#Will open a wpa_cli shell. Run remaining commands in here.
7.	scan
8.	scan_results
9.	add_network	#Will output a number
10.	set_network <number> ssid "nameOfWifi"
11. 	set_network <number> psk "yourPassword"
12.	enable_network <number>
13.	save_config
##############################################################################################################################
#Sound Controls
##############################################################################################################################
alsamixer -c 0
#            |
#            is the device number

##############################################################################################################################
Keyboard Special Keys
##############################################################################################################################

#Install the 'sxhkd' package.
#Will work. Mostly.

################################################################################################################################################
Miscellaneous
################################################################################################################################################

#In case your PC hangs, this sequence can be used for safely rebooting. For this to work, some additional steps need to be performed. See your window manager/desktop environment manual.

REISUB = Raising Elephants Is So Utterly Boring

1. Press Alt + SysRq + R	//Takes keyboard control back from the X
2. Press Alt + SysRq + E	//Sends SIGTERM to all processes so that they terminate gracefully
3. Press Alt + SysRq + I	//Sends SIGKILL to all processes (except init) so that they terminate immediately
4. Press Alt + SysRq + S	//Flush data to Disk
5. Press Alt + SysRq + U	//Remount filesystems in Read-Only Mode
6. Press Alt + SysRq + B	//Reboot


#Updating the bootloader(GRUB) after every kernel upgrade
grub-mkconfig -o /boot/grub/grub.cfg
#If you have unwanted OS entries in the boot menu, they can be removed using the following.
efibootmgr -v	#Lists the boot entries. Find the entry which you want to delete and note down its number
efibootmgr -b <number> -B	#Deletes the boot entry with id <number>

#Cleaning package cache using paccache timer. This performs 'paccache -r' every week.
#Requires 'pacman-contrib' package.
systemctl start paccache.timer

#Archiving files using the 'tar' utility.
tar -cvf <filename> <file/directory to archive>
#Decompresing 'tar' files.
tar -xvf <archiveName>

################################################################################################################################################
Loop Devices
################################################################################################################################################
#Mounting
#1.Create an ISO file using 'dd'
dd if=/dev/zero of=</path/to/your/place/filename.iso> bs=4096 count=400
#2.Create a loop device. This will produce a file in /dev named loop<number>.
udisksctl loop-setup -r -f <imageName>.iso
#3.Setup loop device
losetup -f	#Displays available loop devices.
losetup /dev/loop<number> </directory/to/mount>
#4.Making the filesystem on the device.
mkfs -t <typeOfFilesystem> /dev/loop<number>
#5.Mounting the filsystem in user directory.
mount -t <typeOfFilesystem> /dev/loop<number> </directory/to/mount>

################################################################################################################################################
Software Development
################################################################################################################################################

#Viewing object files
#This command disassembles the object file into assembly code and stores it into a separate file named 'file'.
objdump -d <filename.o> > file

#Viewing symbol table of a binary file
nm <filename>

################################################################################################################################################
Applications
################################################################################################################################################

#Taking screenshots using mouse
scrot -s -b

#Storage used by various items in a directory. #Requires ncdu packagey
ncdu	

#To list hardware info. Requires 'lshw' package.
lshw	#run as root

#VirtualBox Tips(assuming you have VirtualBox installed.)
################## Using Host webcam ###################
#Install VirtualBox Extension Pack from their website
#...In case of any errors while installing that, search online.
#Then using your terminal, list the webcams. (For the meaning of the output, refer this: https://www.virtualbox.org/manual/ch09.html#webcam-passthrough )
#The first field of the output will be the alias name of the webcam. You will need to check for correct alias, if multiple devices are listed.(Search online.)
VBoxManage list webcams
#Then attach the webcam to the VM
VBoxManage controlvm <VM_Name> webcam attach <webcam alias>

#Converting jpeg images to pdf. Works with any number of images.
convert <imag1>.jpeg <imag2>.jpg <pdfName>.pdf

#Combining multiple pdfs. 'out.pdf' is the name of the combined pdf. It must be present. Rename it later. 
pdfunite <pdf1>.pdf <pdf2>.pdf <pdf3>.pdf out.pdf

#Screenrecording using recordmydesktop
recordmydesktop --full-shots --fps 30  --s_quality 10 -o <filename>.ogv

###################Broken Updates#######################
sudo rm -R /var/lib/pacman/sync
sudo pacman -Syu

################################################################################################################################################
# ArchLabs Specific
# In case you decide to switch to ArchLabs OS instead of Arch and you ever face with the issue of broken updates, try this.
# Link: https://forum.archlabslinux.com/t/solved-thank-you-broken-updates/194/6
sudo pacman -Scc

gpg --receive-keys AEFB411B072836CD48FF0381AE252C284B5DBA5D
gpg --receive-keys 9E4F11C6A072942A7B3FD3B0B81EB14A09A25EB0
gpg --receive-keys 35F52A02854DCCAEC9DD5CC410443C7F54B00041

sudo pacman-key --init
sudo pacman-key --populate archlinux

sudo pacman-key -r AEFB411B072836CD48FF0381AE252C284B5DBA5D
sudo pacman-key -r 9E4F11C6A072942A7B3FD3B0B81EB14A09A25EB0
sudo pacman-key -r 35F52A02854DCCAEC9DD5CC410443C7F54B00041

sudo pacman -S archlabs-keyring
sudo pacman-key --populate archlabs
sudo pacman -Syyu

